#!/bin/bash

USR_INPUT() {
ping -c 1 nsa.gov
/bin/echo -e '\n\n' "\e[1;36mSTARTING SCRIPT...

\e[0m"
sleep 2
clear
/bin/echo -e '\n\n' "\e[1;36mENTER THE FOLLOWING PARAMETERS...

\e[0m"

read -p "Enter Drive Encryption password : " ENCRPYTION_PASS
echo "

"
read -p "Swap partition size (eg: 2,4,8) : " SWPPART
echo "

"
lsblk
echo "

"
read -p "Enter Drive Name (eg: sda,vda,nvme0) : " DRIVE
cfdisk /dev/$DRIVE
clear
echo "

"
lsblk /dev/$DRIVE 
echo "

"
read -p "EFI partition (eg: sda1,vda1,nvme01) : " DISK_EFI
echo "

"
read -p "Root partition (eg: sda2,vda2,nvme02) : " DISK_ROOT
}

ENCR(){
clear && /bin/echo -e '\n\n' "\e[1;32mEncrypting Drive...\e[0m"
sleep 1
/bin/echo -e '\n\n' "\e[1;32mRewriting the drive with random data\e[0m"
sleep 1
/bin/echo -e '\n\n' "\e[1;32mIgnore the errors, Do not panic if it looks stuck!

\e[0m"
echo -n "$ENCRPYTION_PASS" | cryptsetup luksFormat --type luks1 /dev/$DISK_ROOT
echo -n "$ENCRPYTION_PASS" | cryptsetup luksOpen /dev/$DISK_ROOT voidvm
vgcreate voidvm /dev/mapper/voidvm
lvcreate --name swap -L ${SWPPART}G voidvm
lvcreate --name root -l 100%FREE voidvm
mkfs.ext4 -L root /dev/voidvm/root
mkswap /dev/voidvm/swap
swapon /dev/voidvm/swap
mount /dev/voidvm/root /mnt
for dir in dev proc sys run; do mkdir -p /mnt/$dir ; mount --rbind /$dir /mnt/$dir ; mount --make-rslave /mnt/$dir ; done
mkfs.fat -F32 /dev/$DISK_EFI
mkdir -p /mnt/boot/efi
mount /dev/$DISK_EFI /mnt/boot/efi
}


BASE_BUILD(){
ARCH=x86_64
echo YES|xbps-install -Sy -R https://mirrors.dotsrc.org/voidlinux -r /mnt base-system cryptsetup grub-x86_64-efi lvm2 vim git terminus-font zsh zsh-syntax-highlighting zsh-autosuggestions
}


CHS_FINAL(){
cp /etc/resolv.conf /mnt/etc/
cp chrootLVM /mnt/chrootLVM 
chmod +x /mnt/chrootLVM 
chroot /mnt bash chrootLVM && rm /mnt/chrootLVM
}

CLOSG(){
umount -R /mnt
clear
/bin/echo -e '\n\n' "\e[1;32mINSTALLATION COMPLETED!...\e[0m"
sleep 1
/bin/echo -e '\n\n' "\e[1;32mREBOOTING IN ..3\e[0m"
sleep 1
/bin/echo -e '\n\n' "\e[1;32mREBOOTING IN ..2\e[0m"
sleep 1
/bin/echo -e '\n\n' "\e[1;32mREBOOTING IN ..1\e[0m"
sleep 1
/bin/echo -e '\n\n' "\e[1;31mREBOOTING NOW......
\e[0m"
reboot

}


#call functions
USR_INPUT
ENCR
BASE_BUILD
CHS_FINAL
CLOSG
  



